/*
 * This file is generated by jOOQ.
 */
package dualsoft.vf.jooq.model.tables;


import dualsoft.vf.jooq.model.Keys;
import dualsoft.vf.jooq.model.Vf;
import dualsoft.vf.jooq.model.tables.records.VfStandingsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VfStandings extends TableImpl<VfStandingsRecord> {

    private static final long serialVersionUID = -152935399;

    /**
     * The reference instance of <code>VF.vf_standings</code>
     */
    public static final VfStandings VF_STANDINGS = new VfStandings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VfStandingsRecord> getRecordType() {
        return VfStandingsRecord.class;
    }

    /**
     * The column <code>VF.vf_standings.team_id</code>.
     */
    public final TableField<VfStandingsRecord, Integer> TEAM_ID = createField(DSL.name("team_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>VF.vf_standings.season_id</code>.
     */
    public final TableField<VfStandingsRecord, Integer> SEASON_ID = createField(DSL.name("season_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>VF.vf_standings.points</code>.
     */
    public final TableField<VfStandingsRecord, Integer> POINTS = createField(DSL.name("points"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>VF.vf_standings.goals_scored</code>.
     */
    public final TableField<VfStandingsRecord, Integer> GOALS_SCORED = createField(DSL.name("goals_scored"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>VF.vf_standings.goals_conceded</code>.
     */
    public final TableField<VfStandingsRecord, Integer> GOALS_CONCEDED = createField(DSL.name("goals_conceded"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>VF.vf_standings</code> table reference
     */
    public VfStandings() {
        this(DSL.name("vf_standings"), null);
    }

    /**
     * Create an aliased <code>VF.vf_standings</code> table reference
     */
    public VfStandings(String alias) {
        this(DSL.name(alias), VF_STANDINGS);
    }

    /**
     * Create an aliased <code>VF.vf_standings</code> table reference
     */
    public VfStandings(Name alias) {
        this(alias, VF_STANDINGS);
    }

    private VfStandings(Name alias, Table<VfStandingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VfStandings(Name alias, Table<VfStandingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VfStandings(Table<O> child, ForeignKey<O, VfStandingsRecord> key) {
        super(child, key, VF_STANDINGS);
    }

    @Override
    public Schema getSchema() {
        return Vf.VF;
    }

    @Override
    public UniqueKey<VfStandingsRecord> getPrimaryKey() {
        return Keys.STANDINGS_PK;
    }

    @Override
    public List<UniqueKey<VfStandingsRecord>> getKeys() {
        return Arrays.<UniqueKey<VfStandingsRecord>>asList(Keys.STANDINGS_PK);
    }

    @Override
    public List<ForeignKey<VfStandingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VfStandingsRecord, ?>>asList(Keys.VF_STANDINGS__STANDINGS_TEAM_FK, Keys.VF_STANDINGS__STANDINGS_SEASON_FK);
    }

    public VfTeam vfTeam() {
        return new VfTeam(this, Keys.VF_STANDINGS__STANDINGS_TEAM_FK);
    }

    public VfSeason vfSeason() {
        return new VfSeason(this, Keys.VF_STANDINGS__STANDINGS_SEASON_FK);
    }

    @Override
    public VfStandings as(String alias) {
        return new VfStandings(DSL.name(alias), this);
    }

    @Override
    public VfStandings as(Name alias) {
        return new VfStandings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VfStandings rename(String name) {
        return new VfStandings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VfStandings rename(Name name) {
        return new VfStandings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
