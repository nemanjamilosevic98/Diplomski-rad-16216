/*
 * This file is generated by jOOQ.
 */
package dualsoft.vf.jooq.model;


import dualsoft.vf.jooq.model.tables.VfBookmaker;
import dualsoft.vf.jooq.model.tables.VfLeague;
import dualsoft.vf.jooq.model.tables.VfMatch;
import dualsoft.vf.jooq.model.tables.VfOdds;
import dualsoft.vf.jooq.model.tables.VfOperator;
import dualsoft.vf.jooq.model.tables.VfRound;
import dualsoft.vf.jooq.model.tables.VfSeason;
import dualsoft.vf.jooq.model.tables.VfSport;
import dualsoft.vf.jooq.model.tables.VfStandings;
import dualsoft.vf.jooq.model.tables.VfTeam;
import dualsoft.vf.jooq.model.tables.records.VfBookmakerRecord;
import dualsoft.vf.jooq.model.tables.records.VfLeagueRecord;
import dualsoft.vf.jooq.model.tables.records.VfMatchRecord;
import dualsoft.vf.jooq.model.tables.records.VfOddsRecord;
import dualsoft.vf.jooq.model.tables.records.VfOperatorRecord;
import dualsoft.vf.jooq.model.tables.records.VfRoundRecord;
import dualsoft.vf.jooq.model.tables.records.VfSeasonRecord;
import dualsoft.vf.jooq.model.tables.records.VfSportRecord;
import dualsoft.vf.jooq.model.tables.records.VfStandingsRecord;
import dualsoft.vf.jooq.model.tables.records.VfTeamRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>VF</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<VfBookmakerRecord, Integer> IDENTITY_VF_BOOKMAKER = Identities0.IDENTITY_VF_BOOKMAKER;
    public static final Identity<VfLeagueRecord, Integer> IDENTITY_VF_LEAGUE = Identities0.IDENTITY_VF_LEAGUE;
    public static final Identity<VfMatchRecord, Integer> IDENTITY_VF_MATCH = Identities0.IDENTITY_VF_MATCH;
    public static final Identity<VfOddsRecord, Integer> IDENTITY_VF_ODDS = Identities0.IDENTITY_VF_ODDS;
    public static final Identity<VfSeasonRecord, Integer> IDENTITY_VF_SEASON = Identities0.IDENTITY_VF_SEASON;
    public static final Identity<VfTeamRecord, Integer> IDENTITY_VF_TEAM = Identities0.IDENTITY_VF_TEAM;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_PK = UniqueKeys0.BOOKMAKER_PK;
    public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_UK = UniqueKeys0.BOOKMAKER_UK;
    public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_EMAIL_UK = UniqueKeys0.BOOKMAKER_EMAIL_UK;
    public static final UniqueKey<VfLeagueRecord> LEAGUE_PK = UniqueKeys0.LEAGUE_PK;
    public static final UniqueKey<VfMatchRecord> MATCH_PK = UniqueKeys0.MATCH_PK;
    public static final UniqueKey<VfMatchRecord> MATCH_UK = UniqueKeys0.MATCH_UK;
    public static final UniqueKey<VfOddsRecord> ODDS_PK = UniqueKeys0.ODDS_PK;
    public static final UniqueKey<VfOddsRecord> ODDS_UK = UniqueKeys0.ODDS_UK;
    public static final UniqueKey<VfOperatorRecord> OPERATOR_PK = UniqueKeys0.OPERATOR_PK;
    public static final UniqueKey<VfOperatorRecord> OPERATOR_UK = UniqueKeys0.OPERATOR_UK;
    public static final UniqueKey<VfOperatorRecord> OPERATOR_EMAIL_UK = UniqueKeys0.OPERATOR_EMAIL_UK;
    public static final UniqueKey<VfRoundRecord> ROUND_PK = UniqueKeys0.ROUND_PK;
    public static final UniqueKey<VfSeasonRecord> SEASON_PK = UniqueKeys0.SEASON_PK;
    public static final UniqueKey<VfSportRecord> SPORT_PK = UniqueKeys0.SPORT_PK;
    public static final UniqueKey<VfStandingsRecord> STANDINGS_PK = UniqueKeys0.STANDINGS_PK;
    public static final UniqueKey<VfTeamRecord> TEAM_PK = UniqueKeys0.TEAM_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<VfLeagueRecord, VfSportRecord> VF_LEAGUE__LEAGUE_SPORT_FK = ForeignKeys0.VF_LEAGUE__LEAGUE_SPORT_FK;
    public static final ForeignKey<VfMatchRecord, VfRoundRecord> VF_MATCH__MATCH_ROUND_FK = ForeignKeys0.VF_MATCH__MATCH_ROUND_FK;
    public static final ForeignKey<VfMatchRecord, VfTeamRecord> VF_MATCH__MATCH_TEAM_HOME_FK = ForeignKeys0.VF_MATCH__MATCH_TEAM_HOME_FK;
    public static final ForeignKey<VfMatchRecord, VfTeamRecord> VF_MATCH__MATCH_TEAM_AWAY_FK = ForeignKeys0.VF_MATCH__MATCH_TEAM_AWAY_FK;
    public static final ForeignKey<VfOddsRecord, VfMatchRecord> VF_ODDS__ODDS_MATCH_FK = ForeignKeys0.VF_ODDS__ODDS_MATCH_FK;
    public static final ForeignKey<VfRoundRecord, VfSeasonRecord> VF_ROUND__ROUND_SEASON_FK = ForeignKeys0.VF_ROUND__ROUND_SEASON_FK;
    public static final ForeignKey<VfSeasonRecord, VfLeagueRecord> VF_SEASON__SEASON_LEAGUE_FK = ForeignKeys0.VF_SEASON__SEASON_LEAGUE_FK;
    public static final ForeignKey<VfStandingsRecord, VfTeamRecord> VF_STANDINGS__STANDINGS_TEAM_FK = ForeignKeys0.VF_STANDINGS__STANDINGS_TEAM_FK;
    public static final ForeignKey<VfStandingsRecord, VfSeasonRecord> VF_STANDINGS__STANDINGS_SEASON_FK = ForeignKeys0.VF_STANDINGS__STANDINGS_SEASON_FK;
    public static final ForeignKey<VfTeamRecord, VfLeagueRecord> VF_TEAM__TEAM_LEAGUE_FK = ForeignKeys0.VF_TEAM__TEAM_LEAGUE_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<VfBookmakerRecord, Integer> IDENTITY_VF_BOOKMAKER = Internal.createIdentity(VfBookmaker.VF_BOOKMAKER, VfBookmaker.VF_BOOKMAKER.ID);
        public static Identity<VfLeagueRecord, Integer> IDENTITY_VF_LEAGUE = Internal.createIdentity(VfLeague.VF_LEAGUE, VfLeague.VF_LEAGUE.ID);
        public static Identity<VfMatchRecord, Integer> IDENTITY_VF_MATCH = Internal.createIdentity(VfMatch.VF_MATCH, VfMatch.VF_MATCH.ID);
        public static Identity<VfOddsRecord, Integer> IDENTITY_VF_ODDS = Internal.createIdentity(VfOdds.VF_ODDS, VfOdds.VF_ODDS.ID);
        public static Identity<VfSeasonRecord, Integer> IDENTITY_VF_SEASON = Internal.createIdentity(VfSeason.VF_SEASON, VfSeason.VF_SEASON.ID);
        public static Identity<VfTeamRecord, Integer> IDENTITY_VF_TEAM = Internal.createIdentity(VfTeam.VF_TEAM, VfTeam.VF_TEAM.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_PK = Internal.createUniqueKey(VfBookmaker.VF_BOOKMAKER, "bookmaker_pk", new TableField[] { VfBookmaker.VF_BOOKMAKER.ID }, true);
        public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_UK = Internal.createUniqueKey(VfBookmaker.VF_BOOKMAKER, "bookmaker_uk", new TableField[] { VfBookmaker.VF_BOOKMAKER.USERNAME, VfBookmaker.VF_BOOKMAKER.PASSWORD }, true);
        public static final UniqueKey<VfBookmakerRecord> BOOKMAKER_EMAIL_UK = Internal.createUniqueKey(VfBookmaker.VF_BOOKMAKER, "bookmaker_email_uk", new TableField[] { VfBookmaker.VF_BOOKMAKER.EMAIL }, true);
        public static final UniqueKey<VfLeagueRecord> LEAGUE_PK = Internal.createUniqueKey(VfLeague.VF_LEAGUE, "league_pk", new TableField[] { VfLeague.VF_LEAGUE.ID }, true);
        public static final UniqueKey<VfMatchRecord> MATCH_PK = Internal.createUniqueKey(VfMatch.VF_MATCH, "match_pk", new TableField[] { VfMatch.VF_MATCH.ID }, true);
        public static final UniqueKey<VfMatchRecord> MATCH_UK = Internal.createUniqueKey(VfMatch.VF_MATCH, "match_uk", new TableField[] { VfMatch.VF_MATCH.ROUND_ID, VfMatch.VF_MATCH.SEASON_ID, VfMatch.VF_MATCH.TEAM_HOME_ID, VfMatch.VF_MATCH.TEAM_AWAY_ID }, true);
        public static final UniqueKey<VfOddsRecord> ODDS_PK = Internal.createUniqueKey(VfOdds.VF_ODDS, "odds_pk", new TableField[] { VfOdds.VF_ODDS.ID }, true);
        public static final UniqueKey<VfOddsRecord> ODDS_UK = Internal.createUniqueKey(VfOdds.VF_ODDS, "odds_uk", new TableField[] { VfOdds.VF_ODDS.MATCH_ID, VfOdds.VF_ODDS.ODD_TYPE }, true);
        public static final UniqueKey<VfOperatorRecord> OPERATOR_PK = Internal.createUniqueKey(VfOperator.VF_OPERATOR, "operator_pk", new TableField[] { VfOperator.VF_OPERATOR.CODE }, true);
        public static final UniqueKey<VfOperatorRecord> OPERATOR_UK = Internal.createUniqueKey(VfOperator.VF_OPERATOR, "operator_uk", new TableField[] { VfOperator.VF_OPERATOR.USERNAME, VfOperator.VF_OPERATOR.PASSWORD }, true);
        public static final UniqueKey<VfOperatorRecord> OPERATOR_EMAIL_UK = Internal.createUniqueKey(VfOperator.VF_OPERATOR, "operator_email_uk", new TableField[] { VfOperator.VF_OPERATOR.EMAIL }, true);
        public static final UniqueKey<VfRoundRecord> ROUND_PK = Internal.createUniqueKey(VfRound.VF_ROUND, "round_pk", new TableField[] { VfRound.VF_ROUND.ROUND_NUMBER, VfRound.VF_ROUND.SEASON_ID }, true);
        public static final UniqueKey<VfSeasonRecord> SEASON_PK = Internal.createUniqueKey(VfSeason.VF_SEASON, "season_pk", new TableField[] { VfSeason.VF_SEASON.ID }, true);
        public static final UniqueKey<VfSportRecord> SPORT_PK = Internal.createUniqueKey(VfSport.VF_SPORT, "sport_pk", new TableField[] { VfSport.VF_SPORT.CODE }, true);
        public static final UniqueKey<VfStandingsRecord> STANDINGS_PK = Internal.createUniqueKey(VfStandings.VF_STANDINGS, "standings_pk", new TableField[] { VfStandings.VF_STANDINGS.TEAM_ID, VfStandings.VF_STANDINGS.SEASON_ID }, true);
        public static final UniqueKey<VfTeamRecord> TEAM_PK = Internal.createUniqueKey(VfTeam.VF_TEAM, "team_pk", new TableField[] { VfTeam.VF_TEAM.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<VfLeagueRecord, VfSportRecord> VF_LEAGUE__LEAGUE_SPORT_FK = Internal.createForeignKey(Keys.SPORT_PK, VfLeague.VF_LEAGUE, "league_sport_fk", new TableField[] { VfLeague.VF_LEAGUE.SPORT }, true);
        public static final ForeignKey<VfMatchRecord, VfRoundRecord> VF_MATCH__MATCH_ROUND_FK = Internal.createForeignKey(Keys.ROUND_PK, VfMatch.VF_MATCH, "match_round_fk", new TableField[] { VfMatch.VF_MATCH.ROUND_ID, VfMatch.VF_MATCH.SEASON_ID }, true);
        public static final ForeignKey<VfMatchRecord, VfTeamRecord> VF_MATCH__MATCH_TEAM_HOME_FK = Internal.createForeignKey(Keys.TEAM_PK, VfMatch.VF_MATCH, "match_team_home_fk", new TableField[] { VfMatch.VF_MATCH.TEAM_HOME_ID }, true);
        public static final ForeignKey<VfMatchRecord, VfTeamRecord> VF_MATCH__MATCH_TEAM_AWAY_FK = Internal.createForeignKey(Keys.TEAM_PK, VfMatch.VF_MATCH, "match_team_away_fk", new TableField[] { VfMatch.VF_MATCH.TEAM_AWAY_ID }, true);
        public static final ForeignKey<VfOddsRecord, VfMatchRecord> VF_ODDS__ODDS_MATCH_FK = Internal.createForeignKey(Keys.MATCH_PK, VfOdds.VF_ODDS, "odds_match_fk", new TableField[] { VfOdds.VF_ODDS.MATCH_ID }, true);
        public static final ForeignKey<VfRoundRecord, VfSeasonRecord> VF_ROUND__ROUND_SEASON_FK = Internal.createForeignKey(Keys.SEASON_PK, VfRound.VF_ROUND, "round_season_fk", new TableField[] { VfRound.VF_ROUND.SEASON_ID }, true);
        public static final ForeignKey<VfSeasonRecord, VfLeagueRecord> VF_SEASON__SEASON_LEAGUE_FK = Internal.createForeignKey(Keys.LEAGUE_PK, VfSeason.VF_SEASON, "season_league_fk", new TableField[] { VfSeason.VF_SEASON.LEAGUE_ID }, true);
        public static final ForeignKey<VfStandingsRecord, VfTeamRecord> VF_STANDINGS__STANDINGS_TEAM_FK = Internal.createForeignKey(Keys.TEAM_PK, VfStandings.VF_STANDINGS, "standings_team_fk", new TableField[] { VfStandings.VF_STANDINGS.TEAM_ID }, true);
        public static final ForeignKey<VfStandingsRecord, VfSeasonRecord> VF_STANDINGS__STANDINGS_SEASON_FK = Internal.createForeignKey(Keys.SEASON_PK, VfStandings.VF_STANDINGS, "standings_season_fk", new TableField[] { VfStandings.VF_STANDINGS.SEASON_ID }, true);
        public static final ForeignKey<VfTeamRecord, VfLeagueRecord> VF_TEAM__TEAM_LEAGUE_FK = Internal.createForeignKey(Keys.LEAGUE_PK, VfTeam.VF_TEAM, "team_league_fk", new TableField[] { VfTeam.VF_TEAM.LEAGUE_ID }, true);
    }
}
