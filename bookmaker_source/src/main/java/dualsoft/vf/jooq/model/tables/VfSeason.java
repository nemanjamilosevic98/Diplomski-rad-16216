/*
 * This file is generated by jOOQ.
 */
package dualsoft.vf.jooq.model.tables;


import dualsoft.vf.jooq.model.Keys;
import dualsoft.vf.jooq.model.Vf;
import dualsoft.vf.jooq.model.tables.records.VfSeasonRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VfSeason extends TableImpl<VfSeasonRecord> {

    private static final long serialVersionUID = -2059682871;

    /**
     * The reference instance of <code>VF.vf_season</code>
     */
    public static final VfSeason VF_SEASON = new VfSeason();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VfSeasonRecord> getRecordType() {
        return VfSeasonRecord.class;
    }

    /**
     * The column <code>VF.vf_season.id</code>.
     */
    public final TableField<VfSeasonRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('vf_season_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>VF.vf_season.name</code>.
     */
    public final TableField<VfSeasonRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>VF.vf_season.league_id</code>.
     */
    public final TableField<VfSeasonRecord, Integer> LEAGUE_ID = createField(DSL.name("league_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>VF.vf_season.start_date</code>.
     */
    public final TableField<VfSeasonRecord, LocalDateTime> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>VF.vf_season.end_date</code>.
     */
    public final TableField<VfSeasonRecord, LocalDateTime> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>VF.vf_season</code> table reference
     */
    public VfSeason() {
        this(DSL.name("vf_season"), null);
    }

    /**
     * Create an aliased <code>VF.vf_season</code> table reference
     */
    public VfSeason(String alias) {
        this(DSL.name(alias), VF_SEASON);
    }

    /**
     * Create an aliased <code>VF.vf_season</code> table reference
     */
    public VfSeason(Name alias) {
        this(alias, VF_SEASON);
    }

    private VfSeason(Name alias, Table<VfSeasonRecord> aliased) {
        this(alias, aliased, null);
    }

    private VfSeason(Name alias, Table<VfSeasonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VfSeason(Table<O> child, ForeignKey<O, VfSeasonRecord> key) {
        super(child, key, VF_SEASON);
    }

    @Override
    public Schema getSchema() {
        return Vf.VF;
    }

    @Override
    public Identity<VfSeasonRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VF_SEASON;
    }

    @Override
    public UniqueKey<VfSeasonRecord> getPrimaryKey() {
        return Keys.SEASON_PK;
    }

    @Override
    public List<UniqueKey<VfSeasonRecord>> getKeys() {
        return Arrays.<UniqueKey<VfSeasonRecord>>asList(Keys.SEASON_PK);
    }

    @Override
    public List<ForeignKey<VfSeasonRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VfSeasonRecord, ?>>asList(Keys.VF_SEASON__SEASON_LEAGUE_FK);
    }

    public VfLeague vfLeague() {
        return new VfLeague(this, Keys.VF_SEASON__SEASON_LEAGUE_FK);
    }

    @Override
    public VfSeason as(String alias) {
        return new VfSeason(DSL.name(alias), this);
    }

    @Override
    public VfSeason as(Name alias) {
        return new VfSeason(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VfSeason rename(String name) {
        return new VfSeason(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VfSeason rename(Name name) {
        return new VfSeason(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
